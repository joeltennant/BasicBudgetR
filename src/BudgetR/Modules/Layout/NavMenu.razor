@implements IDisposable

@inject NavigationManager NavigationManager

<MudNavMenu>
    <AuthorizeView>
        <Authorized>
            <MudNavLink Href="/" Match="NavLinkMatch.All">Dashboard</MudNavLink>

            <MudNavLink Href="/weather" Match="NavLinkMatch.Prefix">Weather</MudNavLink>
            <MudNavLink>
                <NavLink class="nav-link" href="Account/Manage">
                    <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> @context.User.Identity?.Name
                </NavLink>
            </MudNavLink>
            <MudNavLink>
                <form action="Account/Logout" method="post">
                    <AntiforgeryToken />
                    <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                    <button type="submit" class="nav-link">
                        <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                    </button>
                </form>
            </MudNavLink>
        </Authorized>
        <NotAuthorized>
            <NavLink class="nav-link" href="Account/Register">
                <span class="bi bi-person-nav-menu" aria-hidden="true"></span> Register
            </NavLink>
            <NavLink class="nav-link" href="Account/Login">
                <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
            </NavLink>
        </NotAuthorized>
    </AuthorizeView>
</MudNavMenu>


@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

