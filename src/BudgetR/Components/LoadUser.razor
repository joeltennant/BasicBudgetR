@using BudgetR.Core
@using BudgetR.Server.Application.Handlers.Users
@using MediatR
@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject StateContainer StateContainer
@inject IMediator _mediator
@code {
    protected async override Task OnInitializedAsync()
    {
        // Check if the user is authenticated
        //Check if user has household
        //check if user is active

        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        if (user.Identity is not null && user.Identity.IsAuthenticated)
        {
            // NavigationManager.NavigateTo("/Dashboard", forceLoad: true);
            var result = await _mediator.Send(new LoadUserAction.Request());

            if (result.IsSuccess)
            {
                if (result.Value == LoadUserAction.Action.FinishRegistration)
                {
                    NavigationManager.NavigateTo("/FinishRegistration", forceLoad: true);
                }
                else if (result.Value == LoadUserAction.Action.ReactivateAccount)
                {
                    NavigationManager.NavigateTo("/Reactivate", forceLoad: true);
                }
            }
            else
            {
                NavigationManager.NavigateTo("/Error", forceLoad: true);
            }
        }
    }
}
