@page "/accounts"
@using BasicBudgetR.Core.Enums;
@using BasicBudgetR.Core.Models;
@using BasicBudgetR.Server.Application.Handlers.Accounts;
@inject IDialogService DialogService

<MudGrid>
    <MudItem xs="12">
        <h2>My Accounts</h2>

        <p>Here is a list of your accounts.</p>
    </MudItem>
    <MudItem sm="12" lg="4">
        <MudDataGrid Items="@DebitAccounts">
            <Columns>
                <PropertyColumn Property="x => x.Name" Title="Name" />
                <PropertyColumn Property="x => x.AccountType" />
                <PropertyColumn Property="x => x.Balance" />
            </Columns>
        </MudDataGrid>
    </MudItem>
    <MudItem sm="12" lg="4">
        <MudDataGrid Items="@CreditAccounts">
            <Columns>
                <PropertyColumn Property="x => x.Name" Title="Name" />
                <PropertyColumn Property="x => x.AccountType" />
                <PropertyColumn Property="x => x.Balance" />
            </Columns>
        </MudDataGrid>
    </MudItem>
</MudGrid>

@code {
    private bool _hidePosition;
    private bool _loading;
    public IEnumerable<AccountModel> DebitAccounts = new List<AccountModel>();
    public IEnumerable<AccountModel> CreditAccounts = new List<AccountModel>();

    protected async override Task OnInitializedAsync()
    {
        await GetAccounts();
    }

    protected async Task GetAccounts()
    {
        var result = await _mediator.Send(new GetAccounts.Request());
        var accounts = result.Value;
        this.DebitAccounts = accounts.Where(x => x.BalanceType == BalanceType.Debit).ToList();
        this.CreditAccounts = accounts.Where(x => x.BalanceType == BalanceType.Credit).ToList();
    }

    private async Task AddAccount()
    {
      
    }
}