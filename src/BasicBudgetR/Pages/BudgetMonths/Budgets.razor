@page "/budgets"
@using BasicBudgetR.Core.Models;
@using BasicBudgetR.Server.Application.Handlers.BudgetMonths;
@using BasicBudgetR.Shared.ComponentTemplates
@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager

<ToolBarPageTemplate BodyColums="6">
    <ToolBarTitle>Budgets</ToolBarTitle>
    <ToolBarLeftSide></ToolBarLeftSide>
    <ToolBarRightSide></ToolBarRightSide>
    @* This is the body of the page *@
    <Body>
        <MudTable Items="@BudgetMonthModels" Hover="true" Breakpoint="Breakpoint.Sm" Loading="@_loading" LoadingProgressColor="Color.Info"
                  Dense="true" Striped="true" OnRowClick="RowClickEvent" T="BudgetMonthModel">
            <HeaderContent>
                <MudTh>Month</MudTh>
                <MudTh>Year</MudTh>
                <MudTh>Income Total</MudTh>
                <MudTh>Expense Total</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Month">@context.MonthName</MudTd>
                <MudTd DataLabel="Year">@context.Year</MudTd>
                <MudTd DataLabel="Income Total">@context.IncomeTotal</MudTd>
                <MudTd DataLabel="Expense Total">@context.ExpenseTotal</MudTd>
            </RowTemplate>
        </MudTable>
    </Body>
</ToolBarPageTemplate>

@code {
    private IEnumerable<BudgetMonthModel> BudgetMonthModels = new List<BudgetMonthModel>();
    private bool _loading;


    protected override async Task OnInitializedAsync()
    {
        await GetBudgets();
    }

    private async Task GetBudgets()
    {
        _loading = true;
        var result = await _mediator.Send(new AllBudgets.Request());

        if (result.IsSuccess)
        {
            BudgetMonthModels = result.Value;
        }
        else
        {
            Snackbar.Add("Your budgets cannot be loaded at this time.", Severity.Error);
        }
        _loading = false;
    }

    private void RowClickEvent(TableRowClickEventArgs<BudgetMonthModel> tableRowClickEventArgs)
    {

    }
}
